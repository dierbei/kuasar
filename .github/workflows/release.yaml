name: release

concurrency:
  group: release-${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - '**/v[0-9]+.[0-9]+.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  vmm:
    strategy:
      matrix:
        features: ["cloud_hypervisor"]
    
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install nightly
      - name: Install containerd
        run: |
          sudo apt-get update
          sudo apt-get install -y containerd
      - name: Start containerd
        run: |
          sudo systemctl start containerd
          sudo systemctl enable containerd
      - name: Build vmm
        run: sudo -E make vmm HYPERVISOR=${{ matrix.features }} 
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.features }}
          path: bin/
  
  quark:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Build quark
        run: make quark
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: quark
          path: bin/
  
  wasm: 
    strategy:
      matrix:
        features: ["wasmedge"]
  
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Install WasmEdge
        if: ${{ matrix.features }} == 'wasmedge'
        run: curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- -v 0.11.2 >> /dev/null
      - name: Build wasm
        run: make wasm WASM_RUNTIME=${{ matrix.features }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.features }}
          path: bin/
  
  shim:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Build shim
        working-directory: shim
        run: make all
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: shim
          path: shim/bin/

  containerd:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Download and Extract Containerd
        run: make install/containerd
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: containerd
          path: bin

  release:
    permissions:
      contents: write
    needs:
      - vmm
      - quark
      - wasm
      - shim
      - containerd
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set RELEASE_VERSION ENV var
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=kuasar-${GITHUB_REF:10}-linux-amd64.tar.gz" >> $GITHUB_ENV
          echo "VENDOR_NAME=kuasar-${GITHUB_REF:10}-vendor.tar.gz" >> $GITHUB_ENV
      - name: Package vendor
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ env.RELEASE_VERSION }} --generate-notes
          make vendor
          mkdir ../temp
          cp -r ./* ../temp/
          tar -czvf ${{ env.VENDOR_NAME }} -C ../temp .
          gh release upload ${{ env.RELEASE_VERSION }} ${{ env.VENDOR_NAME }}
      - uses: actions/download-artifact@v3
        with:
          path: _artifacts
      - name: Package release
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p _dist
          find _artifacts -type f | xargs -I {} cp {} _dist/
          tar -czvf ${{ env.ARCHIVE_NAME }} -C _dist .
          gh release upload ${{ env.RELEASE_VERSION }} ${{ env.ARCHIVE_NAME }}